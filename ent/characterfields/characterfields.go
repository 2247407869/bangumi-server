// Code generated by entc, DO NOT EDIT.

package characterfields

import (
	"fmt"
)

const (
	// Label holds the string label denoting the characterfields type in the database.
	Label = "character_fields"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "prsn_id"
	// FieldPrsnCat holds the string denoting the prsn_cat field in the database.
	FieldPrsnCat = "prsn_cat"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldBloodtype holds the string denoting the bloodtype field in the database.
	FieldBloodtype = "bloodtype"
	// FieldBirthYear holds the string denoting the birth_year field in the database.
	FieldBirthYear = "birth_year"
	// FieldBirthMon holds the string denoting the birth_mon field in the database.
	FieldBirthMon = "birth_mon"
	// FieldBirthDay holds the string denoting the birth_day field in the database.
	FieldBirthDay = "birth_day"
	// Table holds the table name of the characterfields in the database.
	Table = "chii_person_fields"
)

// Columns holds all SQL columns for characterfields fields.
var Columns = []string{
	FieldID,
	FieldPrsnCat,
	FieldGender,
	FieldBloodtype,
	FieldBirthYear,
	FieldBirthMon,
	FieldBirthDay,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// PrsnCat defines the type for the "prsn_cat" enum field.
type PrsnCat string

// PrsnCat values.
const (
	PrsnCatPrsn PrsnCat = "prsn"
	PrsnCatCrt  PrsnCat = "crt"
)

func (pc PrsnCat) String() string {
	return string(pc)
}

// PrsnCatValidator is a validator for the "prsn_cat" field enum values. It is called by the builders before save.
func PrsnCatValidator(pc PrsnCat) error {
	switch pc {
	case PrsnCatPrsn, PrsnCatCrt:
		return nil
	default:
		return fmt.Errorf("characterfields: invalid enum value for prsn_cat field: %q", pc)
	}
}
