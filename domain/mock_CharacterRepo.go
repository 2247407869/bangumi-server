// Code generated by mockery v2.10.0. DO NOT EDIT.

package domain

import (
	context "context"

	model "github.com/bangumi/server/model"
	mock "github.com/stretchr/testify/mock"
)

// MockCharacterRepo is an autogenerated mock type for the CharacterRepo type
type MockCharacterRepo struct {
	mock.Mock
}

type MockCharacterRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCharacterRepo) EXPECT() *MockCharacterRepo_Expecter {
	return &MockCharacterRepo_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields: ctx, id
func (_m *MockCharacterRepo) Get(ctx context.Context, id uint32) (model.Character, error) {
	ret := _m.Called(ctx, id)

	var r0 model.Character
	if rf, ok := ret.Get(0).(func(context.Context, uint32) model.Character); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(model.Character)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uint32) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockCharacterRepo_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type MockCharacterRepo_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//  - ctx context.Context
//  - id uint32
func (_e *MockCharacterRepo_Expecter) Get(ctx interface{}, id interface{}) *MockCharacterRepo_Get_Call {
	return &MockCharacterRepo_Get_Call{Call: _e.mock.On("Get", ctx, id)}
}

func (_c *MockCharacterRepo_Get_Call) Run(run func(ctx context.Context, id uint32)) *MockCharacterRepo_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uint32))
	})
	return _c
}

func (_c *MockCharacterRepo_Get_Call) Return(_a0 model.Character, _a1 error) *MockCharacterRepo_Get_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}
